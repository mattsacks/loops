// Generated by CoffeeScript 1.3.3
var LoopView,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

LoopView = (function(_super) {

  __extends(LoopView, _super);

  function LoopView(options) {
    var modoptions;
    if (options == null) {
      options = {};
    }
    modoptions = _.extend({}, this.defaults, options);
    LoopView.__super__.constructor.call(this, modoptions);
    this.gather();
  }

  LoopView.prototype.defaults = {
    templateId: 'loop-detail-template'
  };

  LoopView.prototype.el = '#loop';

  LoopView.prototype.gather = function() {
    this.template = Hogan.compile($("#" + this.options.templateId).html());
    return this.element = this.$el;
  };

  LoopView.prototype.render = function(template, model) {
    if (template == null) {
      template = this.template;
    }
    this.model = model;
    this.element.html(template.render(model));
    return this.trigger('render', this, model);
  };

  LoopView.prototype.restore = function(model) {
    this.model = model;
    return this.trigger('restore', this.model);
  };

  return LoopView;

})(Backbone.View);
