// Generated by CoffeeScript 1.3.3
var Loop, Loops,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Loops = (function(_super) {

  __extends(Loops, _super);

  function Loops(models, options) {
    var data, event, run, _ref;
    if (models == null) {
      models = [];
    }
    if (options == null) {
      options = {};
    }
    this.model = Loop;
    data = _.union(models, _.toArray(this.localStorage.data));
    Loops.__super__.constructor.call(this, data, options);
    this.localStorage.save();
    _ref = this.events;
    for (event in _ref) {
      run = _ref[event];
      this.on(event, run);
    }
  }

  Loops.prototype.parse = 'loops';

  Loops.prototype.localStorage = new Store('loops');

  Loops.prototype.events = {
    'add': function(model) {
      return this.sync('create', model);
    },
    'remove': function(model) {
      return this.sync('delete', model);
    },
    'reset': function(model) {
      localStorage.removeItem('loops');
      return this.localStorage = new Store('loops');
    }
  };

  Loops.prototype.sync = Backbone.sync.store;

  Loops.prototype.save = function() {
    return this.localStorage.save();
  };

  return Loops;

})(Backbone.Collection);

Loop = (function(_super) {

  __extends(Loop, _super);

  function Loop(attributes, options) {
    attributes.id || (attributes.id = S4());
    Loop.__super__.constructor.call(this, attributes, options);
  }

  return Loop;

})(Backbone.Model);
